#!/bin/bash
#------------------------
# PrintDCP v1.08
#------------------------
# GNU GPLv3
# (c)2018 Jeff Billings
#------------------------

help () {
  echo "printDCP - automates the process of creating DCP drives"
  echo " "
  echo "Usage:   printDCP \"[volume name]\" [source path] [drive device path]"
  echo " "
  echo "  -g --gui   Graphical Interface"
  echo "  -h --help  Operating Instructions"
}
cancel () {
  echo "(Cancelled by user)"
  exit 1
}
error () {
  echo "(Error) "$1
  exit 1
}
check () {
  if [[ $? -eq 1 ]]; then
    cancel
  fi
}
finish () {
  echo "(Finished)"
  exit 0
}
ops () {
  umount $3
  mkfs.ext2 -I 128 -F -L $1 $3
  mkdir /media/$1
  mount $3 /media/$1
  rsync -a --progress --chmod 755 $2 /media/$1
}
gui () {
  IFS=$'\n'
  drive=$(lsblk -I 8 -d -n -p -P --output NAME,MODEL,SIZE | 
    awk -F '"' '{print $2"\n"$4"\n"$6}' |
    zenity --list --title "PrintDCP" \
    --width 400 --height 300 \
    --text "Select a drive to <b>erase</b> and prepare:" \
    --column "Device" --column "Model" --column "Size" \
    2>/dev/null )
  check
  name=$(zenity --entry --title "PrintDCP" --text "Enter a drive name:\n(Up to 20 characters)" --entry-text="DCP001" 2>/dev/null)
  check
  source=$(zenity --file-selection --directory \
    --title="Choose source DCP folder ..." \
    --filename=$HOME/ \
    2>/dev/null
  )
  check
  ops $name $source $drive & PIPED_PID=$!
  tail -f /dev/null --pid $PIPED_PID | (
    zenity --progress --pulsate \
    --width=300 --height=200 \
    --title="PrintDCP" \
    --text="Copying DCP..." 2>/dev/null || kill $PIPED_PID );
}
if [ "$#" -eq 0 ]; then
  help
fi
while [[ "$#" > 0 ]]; do case $1 in
  -g|--gui)
    gui
    finish
    shift;;
  -h|--help)
    help
    shift;;
  *)
    ops $1 $2 $3
    finish
esac; shift; done
