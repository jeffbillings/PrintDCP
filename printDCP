#!/bin/bash
#------------------------
# PrintDCP
#------------------------
# GNU GPLv3
# (c)2018 Jeff Billings
#------------------------

help () {
  echo "printDCP - automates the process of creating DCP drives"
  echo " "
  echo "Usage:   printDCP \"[volume name]\" [source path] [drive device path]"
  echo " "
  echo "  -g --gui   Graphical Interface"
  echo "  -h --help  Operating Instructions"
}
error () {
  echo "(Error) "$1
  exit 1
}
check () {
  if [[ $? -eq 1 ]]; then
    echo "(Cancelled by user)"
    exit 1
  fi
}
finish () {
  echo "(Finished)"
  exit 0
}
init () {
  drive=$1
  name=$2
  password=$3
  echo "Unmounting device..."
    echo -e $password | sudo -S umount $drive
  echo "Creating partition..."
    echo -e $password | sudo -S mkfs.ext2 -I 128 -F -L $name $drive
  echo "Mounting volume..."
    gio mount -d $drive
}
copy () {
  drive=$1
  source=$2
  password=$3
  mount=$(lsblk $drive -o MOUNTPOINT -n)
  echo "Copying DCP, performing checksum, setting permissions..."
    echo -e $password | sudo -S rsync -a --progress --checksum --chmod 755 $source $mount
}
gui () {
  IFS=$'\n'
  drive=$(lsblk -I 8 -d -n -p -P --output NAME,MODEL,SIZE |
    awk -F '"' '{print $2"\n"$4"\n"$6}' |
    zenity --list \
    --title="PrintDCP" \
    --width=400 --height=300 \
    --text="Select a drive to <b>erase</b> and prepare:" \
    --column="Device" --column="Model" --column="Size" \
    2>/dev/null )
  check
  name=$(zenity --entry \
    --title="PrintDCP" \
    --text="Enter a drive name:\n(Up to 20 characters)" \
    --entry-text="DCP001" \
    2>/dev/null)
  check
  source=$(zenity --file-selection --directory \
    --title="Choose source DCP folder ..." \
    --filename=$HOME/ \
    2>/dev/null
  )
  check
  password="$(zenity --password --title PrintDCP 2>/dev/null)\n"
  check
  init $drive $name $password & PIPED_PID=$!
  tail -f /dev/null --pid $PIPED_PID | (
    zenity --progress --pulsate --auto-close \
    --width=300 --height=150 \
    --title="PrintDCP" \
    --text="Initializing drive..." \
    2>/dev/null || kill $PIPED_PID );
  check
  copy $drive $source $password & PIPED_PID=$!
  tail -f /dev/null --pid $PIPED_PID | (
    zenity --progress --pulsate --auto-close \
    --width=300 --height=150 \
    --title="PrintDCP" \
    --text="Copying DCP..." \
    2>/dev/null || kill $PIPED_PID );
  check
  zenity --info \
    --width=300 --height=150 \
    --title="PrintDCP" \
    --text="Drive preparation finished." \
    2>/dev/null
}
if [ "$#" -eq 0 ]; then
  help
fi
while [[ "$#" > 0 ]]; do case $1 in
  -h|--help)
    help
    shift;;
  -g|--gui)
    gui
    finish
    shift;;
  *)
    if [ $# -ne 3 ]; then
      error "Invalid arguments"
    else
      name=$1
      source=$2
      drive=$3
      read -s -p "Enter your system password: " password
      echo " "
      init $drive $name $password
      copy $drive $source $password
      finish
    fi
esac; shift; done
